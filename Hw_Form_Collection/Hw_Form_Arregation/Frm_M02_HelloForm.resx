<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xYtuaCoR+H//2Q==
</value>
  </data>
</root>